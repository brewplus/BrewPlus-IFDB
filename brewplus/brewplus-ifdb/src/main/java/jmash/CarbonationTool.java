/*
 *  
 *
 *  This file is part of BrewPlus.
 *
 *  BrewPlus is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  BrewPlus is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with BrewPlus; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

package jmash;

import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import jmash.tableModel.NumberFormatter;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/*
 * CarbonationTool.java
 *
 * Created on 12 gennaio 2007, 19.30
 */

/**
 *
 * @author Alessandro
 */
public class CarbonationTool extends javax.swing.JInternalFrame {

	/**
	 *
	 */
	private static final long serialVersionUID = 1025261285741622568L;

	/** Creates new form CarbonationTool */
	public CarbonationTool() {
		initComponents();
		setBorder(Utils.getDefaultBorder());
		setBackground(getBackground().darker());
		jPanel7.setBackground(jPanel7.getBackground().darker());
		jPanel6.setBackground(jPanel6.getBackground().darker());
		jPanel4.setBackground(jPanel4.getBackground().darker());
		this.fldL.setModel(23.0, 1, 9999999999.9, 0.5, "0.0", "CarbTool.L");
		this.fldV.setModel(this.mdlV);
		this.fldG.setModel(0, 0, 9999999999.9, 0.5, "0.0", "CarbTool.G");
		this.ferment.setModel(65, 1, 100, 5, "0", "CarbTool.ferment");
		this.ferment1.setModel(75, 1, 100, 5, "0", "CarbTool.ferment1");
		this.fldV.setEditor(new JSpinner.NumberEditor(this.fldV, "0.00"));
		this.fldG1.setModel(0, 0, 9999999999.9, 0.5, "0.0", "CarbTool.G1");
		spnVol.setModel(2.5, 1, 5.0, 0.1, "0.00", "CarbTool.Vol");
		spnPSI.setModel(1, 1, 100, 1.0, "0.00", "CarbTool.PSI");
		spnT.setModel(12, -10, 35, 1.0, "0.0", "CarbTool.T");
		spnVK.setModel(2.5, 1, 7, 0.1, "0.0", "CarbTool.VK");
		this.pnl.add(createDemoPanel(), BorderLayout.CENTER);
		this.jPanel12.add(createDemoPanelK(), BorderLayout.CENTER);
		pnlForceCarbonation.add(createForceGraph(), BorderLayout.CENTER);
		fldT.getSpinner().setModelFormat(20.0, 0.0, 30.0, 1.0, "0.0", "CarbTool.T");
		fldVolLiquidoB.setModelFormat(0.47, 0.0, 30.0, 0.1, "0.00", "CarbTool.VolLB");
		fldVolLiquidoF.setModelFormat(28.5, 0.0, 1000.0, 0.5, "0.0", "CarbTool.VolLF");
		fldVolMortoB.setModelFormat(0.04, 0.0, 30.0, 0.1, "0.00", "CarbTool.VolMB");
		fldVolMortoF.setModelFormat(1.5, 0.0, 1000.0, 0.5, "0.0", "CarbTool.VolMF");
		fldG1.setModelFormat(20.0, 0.0, 30.0, 1.0, "0.0", "CarbTool.G1");
		spnSpund.setPrecision(1);
		this.spnTK.setTemperature(20);
		spnLK1.setFormat("0.000");
		spnLK2.setFormat("0.000");
		spnLK3.setFormat("0.000");
		spnFG.setGravity(1.012);
		spnK.setGravity(1.048);
		calc();
		calc2();

		calc4();
	}

	private SpinnerNumberModel mdlV = new SpinnerNumberModel(2.5, 0.0, 10.0, 0.1);

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		jTabbedPane1 = new javax.swing.JTabbedPane();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel4 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		fldT = new jmash.component.JTemperatureSpinner();
		jLabel2 = new javax.swing.JLabel();
		fldL = new jmash.component.JVolumeSpinner();
		jLabel3 = new javax.swing.JLabel();
		fldV = new javax.swing.JSpinner();
		jButton1 = new javax.swing.JButton();
		jLabel6 = new javax.swing.JLabel();
		ferment = new jmash.component.JMashSpinner();
		jPanel1 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		jComboBox1 = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		fldG = new jmash.component.JWeightSpinner();
		spnGrLitro = new jmash.component.JWeightSpinner();
		jButton6 = new javax.swing.JButton();
		jPanel5 = new javax.swing.JPanel();
		jLabel13 = new javax.swing.JLabel();
		jComboBox2 = new javax.swing.JComboBox();
		jLabel8 = new javax.swing.JLabel();
		fldG1 = new jmash.component.JWeightSpinner();
		spnGrLitroF = new jmash.component.JWeightSpinner();
		jButton7 = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jLabel11 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		fldVolLiquidoF = new jmash.component.JMashSpinner();
		jLabel10 = new javax.swing.JLabel();
		fldVolMortoF = new jmash.component.JMashSpinner();
		jLabel15 = new javax.swing.JLabel();
		jLabel14 = new javax.swing.JLabel();
		fldVolLiquidoB = new jmash.component.JMashSpinner();
		jLabel12 = new javax.swing.JLabel();
		fldVolMortoB = new jmash.component.JMashSpinner();
		pnl = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jPanel6 = new javax.swing.JPanel();
		pnlForceCarbonation = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		jLabel7 = new javax.swing.JLabel();
		spnT = new jmash.component.JTemperatureSpinner();
		jLabel16 = new javax.swing.JLabel();
		spnVol = new jmash.component.JMashSpinner();
		jLabel17 = new javax.swing.JLabel();
		spnPSI = new jmash.component.JMashSpinner();
		spnPSIBAR = new jmash.component.JPressureSpinner();
		jScrollPane3 = new javax.swing.JScrollPane();
		jPanel7 = new javax.swing.JPanel();
		jPanel9 = new javax.swing.JPanel();
		jLabel18 = new javax.swing.JLabel();
		spnTK = new jmash.component.JTemperatureSpinner();
		jLabel19 = new javax.swing.JLabel();
		spnVK = new jmash.component.JMashSpinner();
		jLabel20 = new javax.swing.JLabel();
		spnLK = new jmash.component.JVolumeSpinner();
		jPanel10 = new javax.swing.JPanel();
		jLabel21 = new javax.swing.JLabel();
		spnFG = new jmash.component.JGravitySpinner();
		jLabel22 = new javax.swing.JLabel();
		spnSpund = new jmash.component.JGravitySpinner();
		jPanel11 = new javax.swing.JPanel();
		jLabel23 = new javax.swing.JLabel();
		spnK = new jmash.component.JGravitySpinner();
		jLabel24 = new javax.swing.JLabel();
		spnLK1 = new jmash.component.JVolumeSpinner();
		jLabel25 = new javax.swing.JLabel();
		spnLK2 = new jmash.component.JVolumeSpinner();
		jLabel26 = new javax.swing.JLabel();
		ferment1 = new jmash.component.JMashSpinner();
		jLabel27 = new javax.swing.JLabel();
		spnLK3 = new jmash.component.JVolumeSpinner();
		jLabel28 = new javax.swing.JLabel();
		spnLK4 = new jmash.component.JVolumeSpinner();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jPanel12 = new javax.swing.JPanel();

		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setResizable(true);
		setTitle("Calcolo carbonazione");
		setFont(getFont());

		jPanel4.setMinimumSize(new java.awt.Dimension(100, 290));
		jPanel4.setLayout(new java.awt.GridBagLayout());

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dati"));
		jPanel2.setPreferredSize(new java.awt.Dimension(850, 75));
		jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

		jLabel1.setText("T. fermentazione");
		jPanel2.add(jLabel1);

		fldT.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldTStateChanged(evt);
			}
		});
		jPanel2.add(fldT);

		jLabel2.setText("Qtà");
		jPanel2.add(jLabel2);

		fldL.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldLStateChanged(evt);
			}
		});
		jPanel2.add(fldL);

		jLabel3.setText("Volumi des.");
		jPanel2.add(jLabel3);

		fldV.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldVStateChanged(evt);
			}
		});
		jPanel2.add(fldV);

		jButton1.setFont(new java.awt.Font("Tahoma", 0, 10));
		jButton1.setText("?");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		jButton1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				jButton1StateChanged(evt);
			}
		});
		jPanel2.add(jButton1);

		jLabel6.setText("Fermentabilità DME");
		jPanel2.add(jLabel6);

		ferment.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fermentStateChanged(evt);
			}
		});
		jPanel2.add(ferment);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		jPanel4.add(jPanel2, gridBagConstraints);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("In bottiglia"));
		jPanel1.setPreferredSize(new java.awt.Dimension(850, 75));
		jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 0));

		jLabel4.setText("Utilizzando");
		jPanel1.add(jLabel4);

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Glucosio(Corn sugar)/Destrosio", "Saccarosio/zucchero di barbabietola o di canna",
						"Estratto di malto secco", "Miele (approssimativo)" }));
		jComboBox1.setSelectedIndex(1);
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});
		jPanel1.add(jComboBox1);

		jLabel5.setText("servono");
		jPanel1.add(jLabel5);

		fldG.setEnabled(false);
		jPanel1.add(fldG);

		spnGrLitro.setEnabled(false);
		jPanel1.add(spnGrLitro);

		jButton6.setText("?");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});
		jPanel1.add(jButton6);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		jPanel4.add(jPanel1, gridBagConstraints);

		jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("In fusto"));
		jPanel5.setPreferredSize(new java.awt.Dimension(850, 150));
		jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 0));

		jLabel13.setText("Utilizzando");
		jPanel5.add(jLabel13);

		jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Glucosio(Corn sugar)/Destrosio", "Saccarosio/zucchero di barbabietola o di canna",
						"Estratto di malto secco", "Miele (approssimativo)" }));
		jComboBox2.setSelectedIndex(1);
		jComboBox2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox2ActionPerformed(evt);
			}
		});
		jPanel5.add(jComboBox2);

		jLabel8.setText("servono");
		jPanel5.add(jLabel8);

		fldG1.setEnabled(false);
		jPanel5.add(fldG1);

		spnGrLitroF.setEnabled(false);
		jPanel5.add(spnGrLitroF);

		jButton7.setText("?");
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});
		jPanel5.add(jButton7);

		jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Contenitori"));
		jPanel3.setPreferredSize(new java.awt.Dimension(800, 75));
		jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

		jLabel11.setText("Fusto:");
		jPanel3.add(jLabel11);

		jLabel9.setText("volume liquido");
		jPanel3.add(jLabel9);

		fldVolLiquidoF.setPreferredSize(new java.awt.Dimension(75, 28));
		fldVolLiquidoF.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldVolLiquidoFStateChanged(evt);
			}
		});
		jPanel3.add(fldVolLiquidoF);

		jLabel10.setText("volume morto");
		jPanel3.add(jLabel10);

		fldVolMortoF.setPreferredSize(new java.awt.Dimension(75, 28));
		fldVolMortoF.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldVolMortoFStateChanged(evt);
			}
		});
		jPanel3.add(fldVolMortoF);

		jLabel15.setText("Bottiglia:");
		jPanel3.add(jLabel15);

		jLabel14.setText("volume liquido");
		jPanel3.add(jLabel14);

		fldVolLiquidoB.setPreferredSize(new java.awt.Dimension(75, 28));
		fldVolLiquidoB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldVolLiquidoBStateChanged(evt);
			}
		});
		jPanel3.add(fldVolLiquidoB);

		jLabel12.setText("volume morto");
		jPanel3.add(jLabel12);

		fldVolMortoB.setPreferredSize(new java.awt.Dimension(75, 28));
		fldVolMortoB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				fldVolMortoBStateChanged(evt);
			}
		});
		jPanel3.add(fldVolMortoB);

		jPanel5.add(jPanel3);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		jPanel4.add(jPanel5, gridBagConstraints);

		pnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		pnl.setMinimumSize(new java.awt.Dimension(40, 280));
		pnl.setPreferredSize(new java.awt.Dimension(850, 220));
		pnl.setLayout(new java.awt.BorderLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		jPanel4.add(pnl, gridBagConstraints);

		jScrollPane1.setViewportView(jPanel4);

		jTabbedPane1.addTab("Con Priming", jScrollPane1);

		jPanel6.setLayout(new java.awt.GridBagLayout());

		pnlForceCarbonation.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		pnlForceCarbonation.setPreferredSize(new java.awt.Dimension(780, 400));
		pnlForceCarbonation.setLayout(new java.awt.BorderLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel6.add(pnlForceCarbonation, gridBagConstraints);

		jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Dati carbonazione"));

		jLabel7.setText("Temperatura");
		jPanel8.add(jLabel7);

		spnT.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnTStateChanged(evt);
			}
		});
		jPanel8.add(spnT);

		jLabel16.setText("Volumi CO2");
		jPanel8.add(jLabel16);

		spnVol.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnVolStateChanged(evt);
			}
		});
		jPanel8.add(spnVol);

		jLabel17.setText("Pressione in PSI");
		jPanel8.add(jLabel17);

		spnPSI.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnPSIStateChanged(evt);
			}
		});
		jPanel8.add(spnPSI);

		spnPSIBAR.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnPSIBARStateChanged(evt);
			}
		});
		jPanel8.add(spnPSIBAR);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel6.add(jPanel8, gridBagConstraints);

		jScrollPane2.setViewportView(jPanel6);

		jTabbedPane1.addTab("Forzato", jScrollPane2);

		jPanel7.setFont(jPanel7.getFont());
		jPanel7.setLayout(new java.awt.GridBagLayout());

		jPanel9.setBorder(
				javax.swing.BorderFactory.createTitledBorder("Dati della birra in fermentazione da carbonare"));
		jPanel9.setFont(jPanel9.getFont());

		jLabel18.setFont(jLabel18.getFont());
		jLabel18.setText("Temp. fermentazione");
		jPanel9.add(jLabel18);

		spnTK.setFont(spnTK.getFont());
		spnTK.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnTKStateChanged(evt);
			}
		});
		jPanel9.add(spnTK);

		jLabel19.setFont(jLabel19.getFont());
		jLabel19.setText("Volumi CO2");
		jPanel9.add(jLabel19);

		spnVK.setFont(spnVK.getFont());
		spnVK.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnVKStateChanged(evt);
			}
		});
		jPanel9.add(spnVK);

		jLabel20.setFont(jLabel20.getFont());
		jLabel20.setText("Volume birra");
		jPanel9.add(jLabel20);

		spnLK.setFont(spnLK.getFont());
		spnLK.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnLKStateChanged(evt);
			}
		});
		jPanel9.add(spnLK);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel7.add(jPanel9, gridBagConstraints);

		jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Spunding"));
		jPanel10.setFont(jPanel10.getFont());

		jLabel21.setFont(jLabel21.getFont());
		jLabel21.setText("FG limite della birra completamente fermentata");
		jPanel10.add(jLabel21);

		spnFG.setFont(spnFG.getFont());
		spnFG.setMinimumSize(new java.awt.Dimension(64, 22));
		spnFG.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnFGStateChanged(evt);
			}
		});
		jPanel10.add(spnFG);

		jLabel22.setFont(jLabel22.getFont());
		jLabel22.setText("SG a cui interrompere");
		jPanel10.add(jLabel22);

		spnSpund.setEnabled(false);
		spnSpund.setFont(spnSpund.getFont());
		jPanel10.add(spnSpund);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel7.add(jPanel10, gridBagConstraints);

		jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Krausening"));
		jPanel11.setFont(jPanel11.getFont());
		jPanel11.setLayout(new java.awt.GridBagLayout());

		jLabel23.setFont(jLabel23.getFont());
		jLabel23.setText("SG del mosto che si vuole aggiungere");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel23, gridBagConstraints);

		spnK.setFont(spnK.getFont());
		spnK.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnKStateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(spnK, gridBagConstraints);

		jLabel24.setFont(jLabel24.getFont());
		jLabel24.setText("Volume di mosto da aggiungere come da foglio Excel di Stefano");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel24, gridBagConstraints);

		spnLK1.setEnabled(false);
		spnLK1.setFont(spnLK1.getFont());
		spnLK1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnLK1StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(spnLK1, gridBagConstraints);

		jLabel25.setFont(jLabel25.getFont());
		jLabel25.setText("Volume di mosto da aggiungere tenendo conto anche del volume aggiunto");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel25, gridBagConstraints);

		spnLK2.setEnabled(false);
		spnLK2.setFont(spnLK2.getFont());
		spnLK2.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnLK2StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(spnLK2, gridBagConstraints);

		jLabel26.setFont(jLabel26.getFont());
		jLabel26.setText("Fermentabilità %");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel26, gridBagConstraints);

		ferment1.setFont(ferment1.getFont());
		ferment1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				ferment1StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel11.add(ferment1, gridBagConstraints);

		jLabel27.setFont(jLabel27.getFont());
		jLabel27.setText("Volume di mosto da aggiungere tenendo conto del volume aggiunto e della fermentabilità");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel27, gridBagConstraints);

		spnLK3.setEnabled(false);
		spnLK3.setFont(spnLK3.getFont());
		spnLK3.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnLK3StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(spnLK3, gridBagConstraints);

		jLabel28.setFont(jLabel28.getFont());
		jLabel28.setText("Secondo formula MegaFAQ - Bertinotti/Faraggi/Calamida");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(jLabel28, gridBagConstraints);

		spnLK4.setEnabled(false);
		spnLK4.setFont(spnLK4.getFont());
		spnLK4.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnLK4StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
		jPanel11.add(spnLK4, gridBagConstraints);

		jButton2.setFont(jButton2.getFont());
		jButton2.setText("?");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel11.add(jButton2, gridBagConstraints);

		jButton3.setFont(jButton3.getFont());
		jButton3.setText("?");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel11.add(jButton3, gridBagConstraints);

		jButton4.setFont(jButton4.getFont());
		jButton4.setText("?");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel11.add(jButton4, gridBagConstraints);

		jButton5.setFont(jButton5.getFont());
		jButton5.setText("?");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel11.add(jButton5, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel7.add(jPanel11, gridBagConstraints);

		jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanel12.setFont(jPanel12.getFont());
		jPanel12.setPreferredSize(new java.awt.Dimension(4, 220));
		jPanel12.setLayout(new java.awt.BorderLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridheight = 10;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel7.add(jPanel12, gridBagConstraints);

		jScrollPane3.setViewportView(jPanel7);

		jTabbedPane1.addTab("Krausening & Co.", jScrollPane3);

		getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		setBounds((screenSize.width - 1123) / 2, (screenSize.height - 630) / 2, 1123, 630);
	}// </editor-fold>//GEN-END:initComponents

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton7ActionPerformed
		String M = "Come da foglio excel disponibile su www.sudiro.altervista.org";

		new ShowFormula(M, formulaPrimingFusto).startModal(this);
	}// GEN-LAST:event_jButton7ActionPerformed

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed

		String M = "K dipende dal tipo di zucchero:\nglucosio=4.02\nsaccarosio=3.82\nmiele = 40 % piu' del glucosio\nDME dipende dalla fermentabilità dello stesso";

		new ShowFormula(M, formulaPrimingBottiglia).startModal(this);
	}// GEN-LAST:event_jButton6ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
		new ShowFormula("", formulaStefano3).startModal(this);
	}// GEN-LAST:event_jButton5ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
		new ShowFormula("", formulaStefano2).startModal(this);
	}// GEN-LAST:event_jButton4ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		new ShowFormula("", formulaStefano).startModal(this);
	}// GEN-LAST:event_jButton3ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		new ShowFormula("", formulaMegaFAQ).startModal(this);
	}// GEN-LAST:event_jButton2ActionPerformed

	private void spnLK4StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnLK4StateChanged

	}// GEN-LAST:event_spnLK4StateChanged

	private void spnPSIBARStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnPSIBARStateChanged
		calc3();
	}// GEN-LAST:event_spnPSIBARStateChanged

	private void spnLK3StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnLK3StateChanged

	}// GEN-LAST:event_spnLK3StateChanged

	private void ferment1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_ferment1StateChanged
		calc4();
	}// GEN-LAST:event_ferment1StateChanged

	private void spnLK2StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnLK2StateChanged

	}// GEN-LAST:event_spnLK2StateChanged

	private void spnKStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnKStateChanged
		calc4();
	}// GEN-LAST:event_spnKStateChanged

	private void spnLK1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnLK1StateChanged
		calc4();
	}// GEN-LAST:event_spnLK1StateChanged

	private void spnLKStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnLKStateChanged
		calc4();
	}// GEN-LAST:event_spnLKStateChanged

	private void spnTKStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnTKStateChanged
		calc4();
	}// GEN-LAST:event_spnTKStateChanged

	private void spnFGStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnFGStateChanged
		calc4();
	}// GEN-LAST:event_spnFGStateChanged

	private void spnVKStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnVKStateChanged
		calc4();
	}// GEN-LAST:event_spnVKStateChanged

	private void spnPSIStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnPSIStateChanged
		calc3();
	}// GEN-LAST:event_spnPSIStateChanged

	private void spnVolStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnVolStateChanged
		calc2();
	}// GEN-LAST:event_spnVolStateChanged

	private void spnTStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnTStateChanged
		calc2();
	}// GEN-LAST:event_spnTStateChanged

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		new Info("British ales\t\t1.5 - 2.0\n" + "Porter, stout\t\t1.7 - 2.3\n" + "Belgian ales\t\t" + "1.9 - 2.4\n"
				+ "European lagers\t2.2 - 2.7\n" + "American ales & lagers\t2.2 - 2.7\n" + "Lambic\t\t2.4 - 2.8\n"
				+ "Fruit lambic\t\t3.0 - 4.5\n" + "German wheat beer\t3.3 - 4.5").startModal(this);
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jButton1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jButton1StateChanged

	}// GEN-LAST:event_jButton1StateChanged

	private void fldLStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldLStateChanged
		calc();
	}// GEN-LAST:event_fldLStateChanged

	private void fldVolMortoBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldVolMortoBStateChanged
		calc();
	}// GEN-LAST:event_fldVolMortoBStateChanged

	private void fldVolLiquidoBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldVolLiquidoBStateChanged
		calc();
	}// GEN-LAST:event_fldVolLiquidoBStateChanged

	private void fldVolMortoFStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldVolMortoFStateChanged
		calc();
	}// GEN-LAST:event_fldVolMortoFStateChanged

	private void fldVolLiquidoFStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldVolLiquidoFStateChanged
		calc();
	}// GEN-LAST:event_fldVolLiquidoFStateChanged

	private void fldTStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldTStateChanged
		calc();
	}// GEN-LAST:event_fldTStateChanged

	private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox2ActionPerformed
		calc();
	}// GEN-LAST:event_jComboBox2ActionPerformed

	private void fermentStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fermentStateChanged
		calc();
	}// GEN-LAST:event_fermentStateChanged

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
		calc();
	}// GEN-LAST:event_jComboBox1ActionPerformed

	private void fldVStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_fldVStateChanged
		calc();
	}// GEN-LAST:event_fldVStateChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private jmash.component.JMashSpinner ferment;
	private jmash.component.JMashSpinner ferment1;
	private jmash.component.JWeightSpinner fldG;
	private jmash.component.JWeightSpinner fldG1;
	private jmash.component.JVolumeSpinner fldL;
	private jmash.component.JTemperatureSpinner fldT;
	private javax.swing.JSpinner fldV;
	private jmash.component.JMashSpinner fldVolLiquidoB;
	private jmash.component.JMashSpinner fldVolLiquidoF;
	private jmash.component.JMashSpinner fldVolMortoB;
	private jmash.component.JMashSpinner fldVolMortoF;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JComboBox jComboBox1;
	private javax.swing.JComboBox jComboBox2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel20;
	private javax.swing.JLabel jLabel21;
	private javax.swing.JLabel jLabel22;
	private javax.swing.JLabel jLabel23;
	private javax.swing.JLabel jLabel24;
	private javax.swing.JLabel jLabel25;
	private javax.swing.JLabel jLabel26;
	private javax.swing.JLabel jLabel27;
	private javax.swing.JLabel jLabel28;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel10;
	private javax.swing.JPanel jPanel11;
	private javax.swing.JPanel jPanel12;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JPanel jPanel9;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JPanel pnl;
	private javax.swing.JPanel pnlForceCarbonation;
	private jmash.component.JGravitySpinner spnFG;
	private jmash.component.JWeightSpinner spnGrLitro;
	private jmash.component.JWeightSpinner spnGrLitroF;
	private jmash.component.JGravitySpinner spnK;
	private jmash.component.JVolumeSpinner spnLK;
	private jmash.component.JVolumeSpinner spnLK1;
	private jmash.component.JVolumeSpinner spnLK2;
	private jmash.component.JVolumeSpinner spnLK3;
	private jmash.component.JVolumeSpinner spnLK4;
	private jmash.component.JMashSpinner spnPSI;
	private jmash.component.JPressureSpinner spnPSIBAR;
	private jmash.component.JGravitySpinner spnSpund;
	private jmash.component.JTemperatureSpinner spnT;
	private jmash.component.JTemperatureSpinner spnTK;
	private jmash.component.JMashSpinner spnVK;
	private jmash.component.JMashSpinner spnVol;
	// End of variables declaration//GEN-END:variables
	private final static double a = -16.6999;
	private final static double b = -0.0101059;
	private final static double c = +0.00116512;
	private final static double d = +0.173354;
	private final static double e = +4.24267;
	private final static double f = -0.0684226;

	private double VT2P(double V, double T) {
		double P = a + b * T + c * T * T + d * T * V + e * V + f * V * V;
		return P;
	}

	private double PT2V(double P, double T) {

		double H = T * d + e;
		double K = -(P - a - b * T - c * T * T);

		double V = (-H - Math.sqrt(H * H - 4 * f * K)) / (2 * f);
		V = (-H + Math.sqrt(H * H - 4 * f * K)) / (2 * f);
		return V;
	}

	boolean flag = false;

	private void calc2() {
		if (flag)
			return;
		flag = true;
		spnPSI.setValue(VT2P(spnVol.getDoubleValue(), Utils.C2F(spnT.getTemperature())));
		spnPSIBAR.setPressure(VT2P(spnVol.getDoubleValue(), Utils.C2F(spnT.getTemperature())));
		graphF();
		flag = false;
	}

	private void graphF() {
		this.series1F.clear();
		// this.series2F.clear();
		// this.series3F.clear();
		// this.series4F.clear();
		series1F.add(-11, spnVol.getDoubleValue());
		series1F.add(51, spnVol.getDoubleValue());
		for (int m = 0; m < 15; m += 1) {
			this.series2F.updateByIndex(m, PT2V(m * 4, Utils.C2F(spnT.getTemperature() - 4)));
			this.series3F.updateByIndex(m, PT2V(m * 4, Utils.C2F(spnT.getTemperature())));
			this.series4F.updateByIndex(m, PT2V(m * 4, Utils.C2F(spnT.getTemperature() + 4)));
		}
	}

	private void calc3() {
		if (flag)
			return;
		flag = true;
		spnVol.setValue(PT2V(spnPSIBAR.getPressure(), Utils.C2F(spnT.getTemperature())));
		graphF();
		flag = false;
	}

	private static String formulaMegaFAQ = "V_kr=\\frac{\\left(V_{CO_2}^{voluto}-V_{CO_2}^{residuo}\\right)*V_mosto*1.8}{OG-FG}";

	private static String formulaStefano = "V_{mostoAggiunto}=\\frac{\\left(V_{CO_2}^{voluto}-V_{CO_2}^{residuo}\\right)*4*V_mosto}{\\frac{SG_{mostoAggiunto}}{3.83}*10}";
	private static String formulaStefano2 = "V_{mostoAggiunto}=\\frac{\\left(V_{CO_2}^{voluto}-V_{CO_2}^{residuo}\\right)*4*V_mosto}{\\frac{SG_{mostoAggiunto}}{3.83}*10-\\left(V_{CO2}^{voluti}-V_{CO2}^{residui}\\right)}";
	private static String formulaStefano3 = "V_{mostoAggiunto}=\\frac{\\left(V_{CO_2}^{voluto}-V_{CO_2}^{residuo}\\right)*\\frac{4}{fermentabilitaMostoAggiunto}*V_mosto}{\\frac{SG_{mostoAggiunto}}{3.83}*10-\\left(V_{CO2}^{voluti}-V_{CO2}^{residui}\\right)}";

	private void calc4() {
		double t = Utils.C2F(this.spnTK.getTemperature());
		double rco2 = ResidualCO2(t);
		double volumi = spnVK.getDoubleValue();
		double zuccheriPerLitro = (volumi - rco2) * 4;
		/*
		 * txt.setText( "residuo="+rco2+" - "+
		 * "zuccheri="+zuccheriPerLitro*spnLK.getVolume() );
		 */

		double sVol = ((spnK.getGravity() * 1000 - 1000) / 3.83);
		/*
		 * txt1.setText( "sVol="+sVol+" - "+
		 * zuccheriPerLitro*spnLK.getVolume()/(sVol*10) );
		 */
		spnLK1.setVolume(zuccheriPerLitro * spnLK.getVolume() / (sVol * 10));
		spnLK2.setVolume(zuccheriPerLitro * spnLK.getVolume() / (sVol * 10 - zuccheriPerLitro));
		spnLK3.setVolume((100.0 / ferment1.getDoubleValue()) * zuccheriPerLitro * spnLK.getVolume()
				/ (sVol * 10 - zuccheriPerLitro));

		spnLK4.setVolume((volumi - rco2) * spnLK.getVolume() * 1.8
				/ ((spnK.getGravity() * 1000 - 1000) * (ferment1.getDoubleValue()) / 100));

		spnSpund.setGravity((spnFG.getGravity() * 1000 + zuccheriPerLitro * 3.83 / 10) / 1000);
		// this.series2K.clear();this.series3K.clear();
		this.series4K.clear();
		this.series4K.add(this.spnTK.getTemperature(), 0);
		this.series4K.add(this.spnTK.getTemperature(), 8.0);
		for (int m = 0; m < 31; m += 1) {
			rco2 = ResidualCO2(Utils.C2F(m));
			this.series2K.updateByIndex(m, volumi);
			this.series3K.updateByIndex(m, volumi - rco2);
			// this.series2K.add(m, volumi );
			// this.series3K.add(m, volumi - rco2 );
		}
	}

	private double ResidualCO2(double t) {
		return 3.0378 - 5.0062e-2 * t + 2.6555e-4 * t * t;
	}

	private double PrimingRate(javax.swing.JComboBox jComboBox) {
		int i = jComboBox.getSelectedIndex();
		if (i == 0) // e' glucosio?
			return 4.02;
		if (i == 1)// e' saccarosio?
			return 3.82;
		if (i == 3) // e' miele?
			return 4.02 * 1.4;
		// e' dme
		return 510.0 / ferment.getDoubleValue();
	}

	private static String formulaPrimingBottiglia = "Q_zuccheri = K_primer * V_mosto * \\left(V_{CO_2}^{voluto}-V_{CO_2}^{residuo}\\right)";

	private static String formulaPrimingFusto = "Q_zuccheri = Q_{zuccheri}^{bottiglia} * \\frac{Vol_{liquido}^{bottiglia}}{Vol_{liquido}^{fusto}} * \\frac{Vol_{vuoto}^{bottiglia}}{Vol_{vuoto}^{fusto}} ";

	private void calc() {
		double t = Utils.C2F(this.fldT.getTemperature());
		double rco2 = ResidualCO2(t);
		double L = fldL.getVolume();
		double v = this.mdlV.getNumber().doubleValue();
		double w = PrimingRate(jComboBox1) * L * (v - rco2);
		if (w < 0)
			w = 0;
		this.fldG.setWeight(w);
		this.spnGrLitro.setWeight(w / L);

		w = PrimingRate(jComboBox2) * L * (v - rco2);

		w = w * (1 / (1 * (fldVolLiquidoF.getDoubleValue() / fldVolLiquidoB.getDoubleValue())
				* fldVolMortoB.getDoubleValue() / fldVolMortoF.getDoubleValue()));
		this.spnGrLitroF.setWeight(w / L);
		if (w < 0)
			w = 0;
		this.fldG1.setWeight(w);

		// this.series2.clear();this.series3.clear();
		this.series4.clear();
		this.series4.add(this.fldT.getTemperature(), 0);
		this.series4.add(this.fldT.getTemperature(), 4.0);
		for (int m = 0; m < 31; m += 1) {
			rco2 = ResidualCO2(Utils.C2F(m));
			this.series2.updateByIndex(m, v);
			this.series3.updateByIndex(m, v - rco2);
		}
	}

	XYPointerAnnotation pointer = null;
	XYSeriesCollection dataset = new XYSeriesCollection();
	XYSeries series1 = new XYSeries("series1");
	XYSeries series2 = new XYSeries("series2");
	XYSeries series3 = new XYSeries("series3");
	XYSeries series4 = new XYSeries("series4");

	public JPanel createDemoPanel() {
		JFreeChart lChart = createChart();
		this.dataset.addSeries(this.series1);
		this.dataset.addSeries(this.series2);
		this.dataset.addSeries(this.series3);
		this.dataset.addSeries(this.series4);

		this.chart.getXYPlot().setDataset(this.dataset);
		for (double m = 0; m < 31; m += 0.5) {
			double rco2 = ResidualCO2(Utils.C2F(m));
			this.series1.add(m, rco2);
		}
		double v = 1.0;
		for (int m = 0; m < 31; m += 1) {
			double rco2 = ResidualCO2(Utils.C2F(m));
			this.series2.add(m, v);
			this.series3.add(m, v - rco2);
		}
		return new ChartPanel(lChart);
	}

	private JFreeChart chart = null;

	private JFreeChart createChart() {

		this.chart = createChart(this.dataset);

		return this.chart;
	}

	private JFreeChart createChart(final XYDataset dataset) {

		final JFreeChart chart1 = ChartFactory.createXYLineChart("", "Temperatura di fermentazione", "Volumi CO2", null,
				PlotOrientation.VERTICAL, true, // legend
				true, // tool tips
				false // URLs
		);
		chart1.setBackgroundPaint(Color.white);
		chart1.getXYPlot().getRenderer().setItemLabelsVisible(true);
		chart1.getXYPlot().getRenderer().setItemLabelPaint(Color.black);
		chart1.setAntiAlias(true);
		final XYPlot plot = chart1.getXYPlot();
		for (int i = 0; i < 3; i++) {
			plot.getRenderer().setSeriesStroke(i, new BasicStroke(3f));
		}

		plot.getRenderer().setSeriesPaint(3, new Color(120, 70, 250));

		plot.getRenderer().setSeriesVisibleInLegend(false);

		plot.setDomainGridlinePaint(Color.gray);
		plot.setRangeGridlinePaint(Color.gray);
		plot.setBackgroundPaint(Color.white);
		plot.setDomainGridlinesVisible(true);
		plot.setRangeGridlinesVisible(true);

		final ValueAxis domainAxis = plot.getDomainAxis();
		final ValueAxis rangeAxis = plot.getRangeAxis();
		domainAxis.setUpperBound(30);
		domainAxis.setLowerBound(0);
		rangeAxis.setUpperBound(4.0);
		rangeAxis.setLowerBound(0);
		plot.getRenderer().setToolTipGenerator(new XYToolTipGenerator() {
			@Override
			public String generateToolTip(XYDataset ds, int serie, int i) {

				if (serie == 0) {
					double d0 = ds.getXValue(serie, i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione residua a " + d0 + " °C, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				if (serie == 1) {
					// double d0=ds.getXValue(serie,i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione desiderata, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				if (serie == 2) {
					double d0 = ds.getXValue(serie, i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione mancante a " + d0 + " °C, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				// double d0=ds.getXValue(serie,i);
				// double y0=ds.getYValue(serie,i);

				String str = "";
				// str="Dopo "+d0+" mesi sarebbero "+formatter.format( y0);
				return str;
			}
		});

		return chart1;

	}

	///////////////////////////////////////////////////////

	XYSeriesCollection datasetF = new XYSeriesCollection();
	XYSeries series1F = new XYSeries("series1F");
	XYSeries series2F = new XYSeries("series2F");
	XYSeries series3F = new XYSeries("series3F");
	XYSeries series4F = new XYSeries("series4F");

	public JPanel createForceGraph() {
		JFreeChart lChart = createChartF();

		this.datasetF.addSeries(this.series2F);
		this.datasetF.addSeries(this.series3F);
		this.datasetF.addSeries(this.series4F);
		this.datasetF.addSeries(this.series1F);

		this.chartF.getXYPlot().setDataset(this.datasetF);

		for (int m = 0; m < 15; m++) {
			this.series2F.add(m * 4, 1);
			this.series3F.add(m * 4, 1);
			this.series4F.add(m * 4, 1);
		}
		return new ChartPanel(lChart);
	}

	private JFreeChart chartF = null;

	private JFreeChart createChartF() {

		this.chartF = createChartF(this.datasetF);

		return this.chartF;
	}

	private JFreeChart createChartF(final XYDataset dataset) {

		final JFreeChart chart1 = ChartFactory.createXYLineChart("", "Pressione PSI", "Volumi CO2", null,
				PlotOrientation.VERTICAL, true, // legend
				true, // tool tips
				false // URLs
		);
		chart1.setBackgroundPaint(Color.white);
		chart1.getXYPlot().getRenderer().setItemLabelsVisible(true);
		chart1.getXYPlot().getRenderer().setItemLabelPaint(Color.black);
		chart1.setAntiAlias(true);
		final XYPlot plot = chart1.getXYPlot();
		Color color = new Color(120, 250, 70);
		plot.getRenderer().setSeriesPaint(0, color.darker());
		plot.getRenderer().setSeriesPaint(1, color);
		plot.getRenderer().setSeriesPaint(2, color.darker());
		plot.getRenderer().setSeriesPaint(3, Color.BLUE);
		plot.getRenderer().setSeriesStroke(0, new BasicStroke(1f));
		plot.getRenderer().setSeriesStroke(1, new BasicStroke(3f));
		plot.getRenderer().setSeriesStroke(2, new BasicStroke(1f));
		plot.getRenderer().setSeriesStroke(3, new BasicStroke(3f));
		plot.getRenderer().setSeriesVisibleInLegend(false);

		plot.setDomainGridlinePaint(Color.gray);
		plot.setRangeGridlinePaint(Color.gray);
		plot.setBackgroundPaint(Color.white);
		plot.setDomainGridlinesVisible(true);
		plot.setRangeGridlinesVisible(true);

		final ValueAxis domainAxis = plot.getDomainAxis();
		final ValueAxis rangeAxis = plot.getRangeAxis();
		domainAxis.setUpperBound(50);
		domainAxis.setLowerBound(0);
		rangeAxis.setUpperBound(6.0);
		rangeAxis.setLowerBound(
				0);/*
					 * plot.getRenderer().setToolTipGenerator(new
					 * XYToolTipGenerator(){ public String
					 * generateToolTip(XYDataset ds, int serie, int i){
					 * 
					 * if(serie == 0){ double d0=ds.getXValue(serie,i); double
					 * y0=ds.getYValue(serie,i); String str=""; str=
					 * "Carbonazione residua a "+d0+" °C, "
					 * +formatter.format(y0)+" volumi."; return str; } if(serie
					 * == 1){ // double d0=ds.getXValue(serie,i); double
					 * y0=ds.getYValue(serie,i); String str=""; str=
					 * "Carbonazione desiderata, "+formatter.format(y0)+
					 * " volumi."; return str; } if(serie == 2){ double
					 * d0=ds.getXValue(serie,i); double
					 * y0=ds.getYValue(serie,i); String str=""; str=
					 * "Carbonazione mancante a "+d0+" °C, "
					 * +formatter.format(y0)+" volumi."; return str; } //double
					 * d0=ds.getXValue(serie,i); // double
					 * y0=ds.getYValue(serie,i);
					 * 
					 * String str=""; // str="Dopo "+d0+" mesi sarebbero "
					 * +formatter.format( y0); return str; } });
					 */
		return chart1;

	}

	//////////////////////////////////////////////////

	XYPointerAnnotation pointerK = null;
	XYSeriesCollection datasetK = new XYSeriesCollection();
	XYSeries series1K = new XYSeries("series1K");
	XYSeries series2K = new XYSeries("series2K");
	XYSeries series3K = new XYSeries("series3K");
	XYSeries series4K = new XYSeries("series4K");

	public JPanel createDemoPanelK() {
		JFreeChart lChartK = createChartK();
		this.datasetK.addSeries(this.series1K);
		this.datasetK.addSeries(this.series2K);
		this.datasetK.addSeries(this.series3K);
		this.datasetK.addSeries(this.series4K);

		this.chartK.getXYPlot().setDataset(this.datasetK);
		for (double m = 0; m < 31; m += 0.5) {
			double rco2 = ResidualCO2(Utils.C2F(m));
			this.series1K.add(m, rco2);
		}
		double volumi = 1.0;
		double rco2 = 1.0;
		for (int m = 0; m < 31; m += 1) {
			rco2 = ResidualCO2(Utils.C2F(m));
			this.series2K.add(m, volumi);
			this.series3K.add(m, volumi - rco2);
		}

		return new ChartPanel(lChartK);
	}

	private JFreeChart chartK = null;

	private JFreeChart createChartK() {

		this.chartK = createChartK(this.datasetK);

		return this.chartK;
	}

	private JFreeChart createChartK(final XYDataset dataset) {

		final JFreeChart chart1 = ChartFactory.createXYLineChart("", "Temperatura di fermentazione", "Volumi CO2", null,
				PlotOrientation.VERTICAL, true, // legend
				true, // tool tips
				false // URLs
		);
		chart1.setBackgroundPaint(Color.white);
		chart1.getXYPlot().getRenderer().setItemLabelsVisible(true);
		chart1.getXYPlot().getRenderer().setItemLabelPaint(Color.black);
		chart1.setAntiAlias(true);
		final XYPlot plot = chart1.getXYPlot();
		for (int i = 0; i < 3; i++) {
			plot.getRenderer().setSeriesStroke(i, new BasicStroke(3f));
		}

		plot.getRenderer().setSeriesPaint(3, new Color(120, 70, 250));

		plot.getRenderer().setSeriesVisibleInLegend(false);

		plot.setDomainGridlinePaint(Color.gray);
		plot.setRangeGridlinePaint(Color.gray);
		plot.setBackgroundPaint(Color.white);
		plot.setDomainGridlinesVisible(true);
		plot.setRangeGridlinesVisible(true);

		final ValueAxis domainAxis = plot.getDomainAxis();
		final ValueAxis rangeAxis = plot.getRangeAxis();
		domainAxis.setUpperBound(30);
		domainAxis.setLowerBound(0);
		rangeAxis.setUpperBound(6.0);
		rangeAxis.setLowerBound(0);
		plot.getRenderer().setToolTipGenerator(new XYToolTipGenerator() {
			@Override
			public String generateToolTip(XYDataset ds, int serie, int i) {

				if (serie == 0) {
					double d0 = ds.getXValue(serie, i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione residua a " + d0 + " °C, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				if (serie == 1) {
					// double d0=ds.getXValue(serie,i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione desiderata, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				if (serie == 2) {
					double d0 = ds.getXValue(serie, i);
					double y0 = ds.getYValue(serie, i);
					String str = "";
					str = "Carbonazione mancante a " + d0 + " °C, " + NumberFormatter.format01(y0) + " volumi.";
					return str;
				}
				// double d0=ds.getXValue(serie,i);
				// double y0=ds.getYValue(serie,i);

				String str = "";
				// str="Dopo "+d0+" mesi sarebbero "+formatter.format( y0);
				return str;
			}
		});

		return chart1;

	}
}
