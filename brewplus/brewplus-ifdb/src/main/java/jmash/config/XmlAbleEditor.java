/*

 *
 *  This file is part of BrewPlus.
 *
 *  BrewPlus is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  BrewPlus is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with BrewPlus; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

package jmash.config;

import java.awt.Rectangle;
import java.io.File;
import java.lang.reflect.Method;
import java.util.List;
import javax.swing.JTable;
import jmash.Gui;
import jmash.tableModel.GenericTableModel;
import jmash.Main;
import jmash.TableSorter;
import jmash.Utils;
import jmash.interfaces.XmlAble;
import org.jdom.Document;
import org.jdom.Element;

/**
 *
 * @author AChiari
 */
public class XmlAbleEditor extends javax.swing.JInternalFrame {

    /** Creates new form Editor */
    private GenericTableModel tableModel = null;
    private Class newObject;
    private TableSorter sorter;
    private String filename;
    private Method reloadMethod;
    
    private String rootTag;

    public XmlAbleEditor(GenericTableModel tableModel, Class newObject, String filename, Method reloadMethod) {
        this.newObject = newObject;
        
        try {
        	Object obj = this.newObject.newInstance();
			if (obj instanceof XmlAble)
			{
				rootTag = ((XmlAble) obj).getTag();
			}
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        this.tableModel = tableModel;
        this.filename = filename;
        this.reloadMethod = reloadMethod;
        sorter = new TableSorter(tableModel);
        initComponents();
        sorter.setTableHeader(this.jTable1.getTableHeader());
        setBorder(Utils.getDefaultBorder());
        jPanel1.setBackground(jPanel1.getBackground().darker());
        jPanel2.setBackground(jPanel2.getBackground().darker());
        jPanel3.setBackground(jPanel3.getBackground().darker());

        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < tableModel.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setWidth(tableModel.getColumnWidth(i));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code
    // ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Editor");
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(40, 100));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edit_remove.png")));
        jButton2.setPreferredSize(new java.awt.Dimension(35, 35));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2, java.awt.BorderLayout.SOUTH);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edit_add.png")));
        jButton1.setPreferredSize(new java.awt.Dimension(37, 35));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);
        jTable1.setModel(sorter);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(100, 32));
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 32));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/filesave.png")));
        jButton3.setPreferredSize(new java.awt.Dimension(37, 35));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton3, java.awt.BorderLayout.WEST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setMinimumSize(new java.awt.Dimension(100, 32));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 32));
        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(0, 587, Short.MAX_VALUE));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 32, Short.MAX_VALUE));
        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel4.setPreferredSize(new java.awt.Dimension(0, 100));
        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 0, Short.MAX_VALUE));
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0,
                329, Short.MAX_VALUE));
        getContentPane().add(jPanel4, java.awt.BorderLayout.WEST);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 593) / 2, (screenSize.height - 429) / 2, 593, 429);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed

        Gui.maltPickerTableModel.setFilterOff();
        saveList();
    }// GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        tableModel.remRow(sorter.modelIndex(jTable1.getSelectedRow()));
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        try {
            tableModel.addRow(newObject.newInstance());
        } catch (IllegalAccessException ex) {
            Utils.showException(ex);
        } catch (InstantiationException ex) {
            Utils.showException(ex);
        }
        showCell(tableModel.getRowCount() - 1, 0);
    }// GEN-LAST:event_jButton1ActionPerformed

    public void showCell(int row, int column) {
        Rectangle rect = jTable1.getCellRect(row, column, true);
        jTable1.scrollRectToVisible(rect);
        jTable1.clearSelection();
        jTable1.setRowSelectionInterval(row, row);
        // jTable1.figetModel().fireTableDataChanged(); // notify the model
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;

    // End of variables declaration//GEN-END:variables
    protected void saveList() {
        List list = tableModel.getRows();
        Document doc = new Document();
        
        Element root = !list.isEmpty() ? new Element(((XmlAble) list.get(0)).getTag()) : new Element(rootTag);
        doc.setRootElement(root);
        for (Object o : list) {
            if (o instanceof XmlAble) {
                root.addContent(((XmlAble) o).toXml());
            }
        }
        Utils.saveXmlAsFile(doc, new File(filename), this);
        try {
            reloadMethod.invoke(Main.class);
        } catch (Exception ex) {
            Utils.showException(ex, "", this);
        }
    }
    
    public String getRootTag() {
		return rootTag;
	}
}
