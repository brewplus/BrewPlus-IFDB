/*
 * CalcoloEfficienza.java
 *
 * Created on 14 novembre 2008, 18.59
 */

package jmash;

import jmash.tableModel.NumberFormatter;

/**
 *
 * @author Alessandro
 */
public class CalcoloEfficienza extends ModalInternalFrame {

	/** Creates new form CalcoloEfficienza */
	private Ricetta ricetta;

	public CalcoloEfficienza(Ricetta ricetta) {
		this.ricetta = ricetta;
		initComponents();
		setResizable(false);
		jVolumeSpinner1.setVolume(ricetta.getVolume());
		jGravitySpinner1.setGravity(ricetta.getGravity());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jVolumeSpinner1 = new jmash.component.JVolumeSpinner();
		jLabel2 = new javax.swing.JLabel();
		jGravitySpinner1 = new jmash.component.JGravitySpinner();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea2 = new javax.swing.JTextArea();

		setClosable(true);
		setIconifiable(true);
		setTitle("Calcolo efficienza");
		setFont(getFont());

		jPanel1.setPreferredSize(new java.awt.Dimension(190, 60));
		jPanel1.setLayout(new java.awt.GridBagLayout());

		jLabel1.setFont(jLabel1.getFont());
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		jLabel1.setLabelFor(jVolumeSpinner1);
		jLabel1.setText("Volume");
		jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
		jLabel1.setPreferredSize(new java.awt.Dimension(43, 16));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel1.add(jLabel1, gridBagConstraints);

		jVolumeSpinner1.setFont(jVolumeSpinner1.getFont());
		jVolumeSpinner1.setPreferredSize(new java.awt.Dimension(140, 22));
		jVolumeSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				jVolumeSpinner1StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel1.add(jVolumeSpinner1, gridBagConstraints);

		jLabel2.setFont(jLabel2.getFont());
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		jLabel2.setLabelFor(jGravitySpinner1);
		jLabel2.setText("Densit√†");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		jPanel1.add(jLabel2, gridBagConstraints);

		jGravitySpinner1.setFont(jGravitySpinner1.getFont());
		jGravitySpinner1.setPreferredSize(new java.awt.Dimension(140, 22));
		jGravitySpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				jGravitySpinner1StateChanged(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		jPanel1.add(jGravitySpinner1, gridBagConstraints);

		getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

		jTextArea1.setColumns(20);
		jTextArea1.setEditable(false);
		jTextArea1.setFont(jTextArea1.getFont());
		jTextArea1.setLineWrap(true);
		jTextArea1.setRows(8);
		jTextArea1.setText(
				"Inserire i valori misurati nel fermentatore per avere l'efficienza di processo, o gli stessi dati misurati prima della bollitura per avere l'efficienza del mash. I valori fanno riferimento ai fermentabili elencati nella ricetta.");
		jTextArea1.setWrapStyleWord(true);
		jTextArea1.setMargin(new java.awt.Insets(5, 5, 5, 5));
		jTextArea1.setPreferredSize(new java.awt.Dimension(202, 130));
		jScrollPane1.setViewportView(jTextArea1);

		getContentPane().add(jScrollPane1, java.awt.BorderLayout.NORTH);

		jTextArea2.setColumns(20);
		jTextArea2.setEditable(false);
		jTextArea2.setFont(jTextArea2.getFont());
		jTextArea2.setLineWrap(true);
		jTextArea2.setRows(3);
		jTextArea2.setWrapStyleWord(true);
		jTextArea2.setMargin(new java.awt.Insets(5, 5, 5, 5));
		jTextArea2.setPreferredSize(new java.awt.Dimension(202, 70));
		jScrollPane2.setViewportView(jTextArea2);

		getContentPane().add(jScrollPane2, java.awt.BorderLayout.SOUTH);

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		setBounds((screenSize.width - 601) / 2, (screenSize.height - 309) / 2, 601, 309);
	}// </editor-fold>//GEN-END:initComponents

	private void jGravitySpinner1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jGravitySpinner1StateChanged
		calc();
	}// GEN-LAST:event_jGravitySpinner1StateChanged

	private void jVolumeSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jVolumeSpinner1StateChanged
		calc();
	}// GEN-LAST:event_jVolumeSpinner1StateChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private jmash.component.JGravitySpinner jGravitySpinner1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JTextArea jTextArea2;
	private jmash.component.JVolumeSpinner jVolumeSpinner1;
	// End of variables declaration//GEN-END:variables

	private void calc() {
		double X = 0;
		double xpts = 0;
		for (Malt m : ricetta.maltTableModel.getRows()) {
			double pts = m.getPotentialSG() * 1000 - 1000;
			double grs = m.getGrammi();
			if (Main.config.getPotLibGal() == 1) {
				// anglosaxon
				if (m.isMashed())
					X += pts * Utils.kgToPound(grs / 1000) / Utils.litToGal(jVolumeSpinner1.getVolume());
				else
					xpts += pts * Utils.kgToPound(grs / 1000) / Utils.litToGal(jVolumeSpinner1.getVolume());
			} else {
				// metric
				if (m.isMashed())
					X += (pts * grs / 100) / jVolumeSpinner1.getVolume();
				else
					xpts += (pts * grs / 100) / jVolumeSpinner1.getVolume();
			}

		}
		double actPts = (jGravitySpinner1.getGravity() * 1000 - 1000) - xpts;
		double eff = 100 * actPts / X;
		if (X == 0)
			eff = 100;
		jTextArea2.setText("Efficienza calcolata: " + NumberFormatter.format02(eff) + "%");
	}

	private void calc2() {
		double X = 0;
		double xpts = 0;
		double totGrammi = 0;
		double totGrammiNotMashed = 0;
		double hwe = 0;
		double hweNotMashed = 0;
		for (Malt m : ricetta.maltTableModel.getRows()) {
			double pts = m.getPotentialSG() * 1000 - 1000;
			double grs = m.getGrammi();
			if (m.isMashed())
				if (Main.config.getPotLibGal() == 1) {
					X += pts * Utils.kgToPound(grs / 1000) / Utils.litToGal(jVolumeSpinner1.getVolume());
				} else {
					// metric mashed
					hwe += pts * (grs / 1000);
					totGrammi += grs;
				}
			else {
				if (Main.config.getPotLibGal() == 1) {
					xpts += pts * Utils.kgToPound(grs / 1000) / Utils.litToGal(jVolumeSpinner1.getVolume());
				} else {
					// metric not mashed
					hweNotMashed += pts * (grs / 1000);
					totGrammiNotMashed += grs;
				}
			}
		}
		hwe = hwe / (totGrammi / 1000);
		hweNotMashed = hweNotMashed / (totGrammiNotMashed / 1000);
		double eff = (((jGravitySpinner1.getGravity() * 1000 - 1000)) * jVolumeSpinner1.getVolume())
				/ (hwe * totGrammi / 1000);
		eff = eff * 10;

		double actPts = (jGravitySpinner1.getGravity() * 1000 - 1000) - xpts;
		// double eff=100*actPts/X;
		// if(X==0)eff=100;
		jTextArea2.setText("Efficienza calcolata: " + NumberFormatter.format02(eff) + "%");
	}
}
